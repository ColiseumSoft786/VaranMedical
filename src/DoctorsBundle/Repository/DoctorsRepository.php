<?php

namespace DoctorsBundle\Repository;

/**
 * DoctorsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DoctorsRepository extends \Doctrine\ORM\EntityRepository
{
    public function getDoctorBySeance($id){
        $qb = $this->createQueryBuilder('d')
            ->select('d')
            ->innerJoin('d.location', 'l')
            ->innerJoin('l.calendrie', 'c')
            ->innerJoin('c.seances', 's')
            ->where('s.id = :id')
            ->setMaxResults(1)
            ->setParameter('id', $id);
        return $qb->getQuery()->getResult();
    }

    public function getAllDoctors(){
        $qb = $this->createQueryBuilder('d')
            ->select('d')
            ->innerJoin('d.location', 'l')
            ->where('l.deleatedAt is null')
            ->andWhere('l.verified = 1');
        return $qb->getQuery()->getResult();
    }
    public function search($mots) {
        $l = explode(" ", $mots);
        $crit = '';
        foreach ($l as $mot) {
            $crit.= "(d.firstName like '%" . $mot . "%' or ";
            $crit.= "d.lastName like '%" . $mot . "%' or ";
            $crit.= "l.adresse like '%" . $mot . "%' or ";
            $crit.= "l.ville like '%" . $mot . "%' or ";
            $crit.= "l.name like '%" . $mot . "%' or ";
            $crit.= "s.libelle like '%" . $mot . "%') and ";
        }

            $crit.= "l.deleatedAt is NULL and ";
            $crit.= "l.verified = 1";

        $qb = $this->createQueryBuilder('d')
            ->select('d')
            ->leftJoin('d.specialities','s')
            ->join('d.location','l')
            ->where($crit)
            ->andWhere('l.doctor = d.id')
            ->orderBy('d.firstName');
        return $qb->getQuery()->getResult();
    }
}

<div id="map_cavas" style="width: 100%; height: 400px">

</div>
<br><br><br>
<script>
    jQuery(function($) {
        // Asynchronously Load the map API
        var script = document.createElement('script');
        script.src = "//maps.googleapis.com/maps/api/js?key=AIzaSyAcgnHwvZsCydPTdHNn_mCaG8eCcPllzD4&callback=initialize";
        document.body.appendChild(script);
    });

    function initialize() {
        var map;
        var bounds = new google.maps.LatLngBounds();
        var mapOptions = {
            mapTypeId: 'satellite'
        };

        // Display a map on the page
        map = new google.maps.Map(document.getElementById("map_cavas"), mapOptions);
        map.setTilt(45);

        // Multiple Markers
        var markers = [
            {% for latLag in locations %}
            [ '{{ latLag.name }}', {{ latLag.latitude }}, {{ latLag.langitude }} ],
            {% endfor %}
        ];
        var infoWindowContent = [
            {% for infos in locations %}
            ['<div class="info_content">' +
            '<h3>{{ infos.name }}</h3>' +
            '<p>{{ infos.adresse }}</p>' +        '</div>'],
            {% endfor %}
        ];
        // Display multiple markers on a map
        var infoWindow = new google.maps.InfoWindow(), marker, i;

        // Loop through our array of markers & place each one on the map
        for( i = 0; i < markers.length; i++ ) {
            var position = new google.maps.LatLng(markers[i][1], markers[i][2]);
            bounds.extend(position);
            marker = new google.maps.Marker({
                position: position,
                map: map,
                title: markers[i][0]
            });

            // Allow each marker to have an info window
            google.maps.event.addListener(marker, 'click', (function(marker, i) {
                return function() {
                    infoWindow.setContent(infoWindowContent[i][0]);
                    infoWindow.open(map, marker);
                }
            })(marker, i));

            // Automatically center the map fitting all markers on the screen
            map.fitBounds(bounds);
        }

        // Override our map zoom level once our fitBounds function runs (Make sure it only runs once)
        var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function(event) {
            this.setZoom(8);
            google.maps.event.removeListener(boundsListener);
        });

    }

</script>
